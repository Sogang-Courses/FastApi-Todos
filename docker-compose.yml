version: "3.7"

services:
  fastapi-app:
    build:
      context: ./fastapi-app      # Dockerfile이 위치한 디렉토리 경로
      dockerfile: Dockerfile      # Dockerfile 이름 (생략 가능, 기본값은 'Dockerfile')
    container_name: FastApi-app
    ports:
      - "5001:5001"
    depends_on:
      - loki
    environment:
      - LOKI_ENDPOINT=http://loki:3100/loki/api/v1/push
  
  # 6주차 과제
  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true  # 메모리 제한 환경에서 유용한 옵션
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - loadtest-net

  # 7주차 과제
  prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      volumes:
        - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      ports:
        - "9090:9090"
      command:
        - "--config.file=/etc/prometheus/prometheus.yml"
      networks:
      - loadtest-net

  grafana:
      image: grafana/grafana:latest
      container_name: grafana
      ports:
        - "3000:3000"
      environment:
        - GF_SECURITY_ADMIN_PASSWORD=admin  # 기본 Grafana 로그인 비밀번호
      volumes:
        - grafana-data:/var/lib/grafana
      networks:
      - loadtest-net

  node-exporter:
      image: prom/node-exporter:latest
      container_name: node-exporter
      ports:
        - "9100:9100"
      networks:
      - loadtest-net

  # 12주차 과제
  jmeter:
    build:
      context: ./jmeter
      dockerfile: Dockerfile
    container_name: jmeter
    volumes:
      - ./jmeter:/jmeter
    command:
      - jmeter
      - -n
      - -t
      - /jmeter/fastapi_test_plan.jmx
      - -l
      - /jmeter/results.jtl
      - -JBASE_URL=http://fastapi-app:5001
      - -Jjmeter.save.saveservice.output_format=csv
      - -e
      - -o
      - /jmeter/report
    networks:
      - loadtest-net
  
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    ports:
      - "8086:8086"
      - "2003:2003"
    environment:
      - INFLUXDB_DB=jmeter
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin123
    volumes:
      - influxdb_data:/var/lib/influxdb
      - ./influxdb.conf:/etc/influxdb/influxdb.conf:ro
    command: influxd -config /etc/influxdb/influxdb.conf
    networks:
      - loadtest-net

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100" 

networks:
  loadtest-net:
    driver: bridge

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  grafana-data:
  influxdb_data: